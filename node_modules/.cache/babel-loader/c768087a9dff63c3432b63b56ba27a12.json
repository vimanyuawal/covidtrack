{"ast":null,"code":"var _jsxFileName = \"/Users/vimanyuawal/my-app/src/Company/Company.js\";\nimport React from 'react';\nimport { wait } from '@testing-library/react';\nimport Plot from 'react-plotly.js';\n\nclass Company extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  getUS_Timeline() {\n    fetch(\"https://api.thevirustracker.com/free-api?countryTimeline=US\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n    return this.state.items;\n  }\n\n  componentDidMount() {\n    let res = this.getUS_Timeline();\n    console.log(res);\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        key: item.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, item.name, \" \", item.price)));\n    }\n  }\n\n}\n\nexport default Company;","map":{"version":3,"sources":["/Users/vimanyuawal/my-app/src/Company/Company.js"],"names":["React","wait","Plot","Company","Component","constructor","props","state","error","isLoaded","items","getUS_Timeline","fetch","then","res","json","result","setState","componentDidMount","console","log","render","message","map","item","name","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAGA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDC,EAAAA,cAAc,GAAG;AACfC,IAAAA,KAAK,CAAC,6DAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM,MAAM,CAACN;AAFF,OAAd;AAID,KARL,EASI;AACA;AACA;AACCF,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjBL;AAmBA,WAAO,KAAKD,KAAL,CAAWG,KAAlB;AACD;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClB,QAAIJ,GAAG,GAAG,KAAKH,cAAL,EAAV;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACc,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACb,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,KAAK,CAACa,GAAN,CAAUC,IAAI,iBACb;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,KADpB,CADD,CADH,CADF;AASD;AACF;;AAxDmC;;AA4DtC,eAAevB,OAAf","sourcesContent":["import React from 'react';\nimport { wait } from '@testing-library/react';\nimport Plot from 'react-plotly.js';\n\n\nclass Company extends React.Component {\n\n    constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  getUS_Timeline() {\n    fetch(\"https://api.thevirustracker.com/free-api?countryTimeline=US\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.items\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n    return this.state.items;\n  }\n\n  componentDidMount() {\n    let res = this.getUS_Timeline();\n    console.log(res);\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {items.map(item => (\n            <li key={item.name}>\n              {item.name} {item.price}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  }\n\n}\n\nexport default Company;"]},"metadata":{},"sourceType":"module"}