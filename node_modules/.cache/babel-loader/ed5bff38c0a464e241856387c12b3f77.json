{"ast":null,"code":"var _jsxFileName = \"/Users/vimanyuawal/my-app/src/Company/Company.js\";\nimport React, { Component } from 'react';\nimport { wait } from '@testing-library/react';\nimport Plot from 'react-plotly.js';\n\nclass Company extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  getUS_Timeline() {\n    fetch(\"https://api.thevirustracker.com/free-api?countryTimeline=US\").then(res => res.json()).then(result => {\n      console.log(result);\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n    console.log(this.state.items);\n    return this.state.items;\n  }\n\n  componentDidMount() {\n    let res = this.getUS_Timeline();\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state; // if (error) {\n    //   return <div>Error: {error.message}</div>;\n    // } else if (!isLoaded) {\n    //   return <div>Loading...</div>;\n    // } else {\n    //   return (\n    //     <ul>\n    //       {items.map(item => (\n    //         <li key={item.name}>\n    //           {item.name} {item.price}\n    //         </li>\n    //       ))}\n    //     </ul>\n    //   );\n    // }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, items);\n  }\n\n}\n\nexport default Company;","map":{"version":3,"sources":["/Users/vimanyuawal/my-app/src/Company/Company.js"],"names":["React","Component","wait","Plot","Company","constructor","props","state","error","isLoaded","items","getUS_Timeline","fetch","then","res","json","result","console","log","setState","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAGA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE5BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDC,EAAAA,cAAc,GAAG;AACfC,IAAAA,KAAK,CAAC,6DAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACF,WAAKG,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM,MAAM,CAACN;AAFF,OAAd;AAID,KATL,EAUI;AACA;AACA;AACCF,IAAAA,KAAD,IAAW;AACT,WAAKW,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAlBL;AAoBAS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWG,KAAvB;AACA,WAAO,KAAKH,KAAL,CAAWG,KAAlB;AACD;;AAEDU,EAAAA,iBAAiB,GAAG;AAClB,QAAIN,GAAG,GAAG,KAAKH,cAAL,EAAV;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC,CADO,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,wBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOG,KAAP,CADR;AAID;;AA7D6B;;AAiEhC,eAAeN,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { wait } from '@testing-library/react';\nimport Plot from 'react-plotly.js';\n\n\nclass Company extends Component {\n\n    constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  getUS_Timeline() {\n    fetch(\"https://api.thevirustracker.com/free-api?countryTimeline=US\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n            console.log(result);\n          this.setState({\n            isLoaded: true,\n            items: result.items\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n    console.log(this.state.items);\n    return this.state.items;\n  }\n\n  componentDidMount() {\n    let res = this.getUS_Timeline();\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    // if (error) {\n    //   return <div>Error: {error.message}</div>;\n    // } else if (!isLoaded) {\n    //   return <div>Loading...</div>;\n    // } else {\n    //   return (\n    //     <ul>\n    //       {items.map(item => (\n    //         <li key={item.name}>\n    //           {item.name} {item.price}\n    //         </li>\n    //       ))}\n    //     </ul>\n    //   );\n    // }\n    return (\n            <div>{ items }</div>\n\n        )\n  }\n\n}\n\nexport default Company;"]},"metadata":{},"sourceType":"module"}