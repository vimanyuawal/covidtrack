{"ast":null,"code":"var _jsxFileName = \"/Users/vimanyuawal/my-app/src/Charts/IndiaCases.js\";\nimport React, { Component } from 'react';\nimport { LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Line, ComposedChart, Area, Bar } from \"recharts\";\n\nclass Company extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  getIndiaData() {\n    fetch('https://api.covid19india.org/data.json').then(res => res.json()).then(result => {\n      // console.log(result);\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      console.log('Could not access data');\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getUS_Timeline();\n  } //   arrangeForGraph() {\n  //     var data = this.state.items;\n  //     var objectArray = [];\n  //     var day = 1;\n  //     for(var key in data['timelineitems'][0]) {\n  //       var date = new Date(key);\n  //       var obj = {\n  //               new_daily_deaths:data['timelineitems'][0][key]['new_daily_deaths'],\n  //               new_daily_cases:data['timelineitems'][0][key]['new_daily_cases'],\n  //               dates:key,\n  //               day: day\n  //             }\n  //       objectArray.push(obj);\n  //       day += 1;\n  //     } \n  //     objectArray.pop();\n  //     return objectArray;\n  //   }\n\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (isLoaded) {\n      var data = this.arrangeForGraph(items);\n      console.log(data);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, \"United States Cases\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LineChart, {\n        width: 1000,\n        height: 300,\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CartesianGrid, {\n        stroke: \"#efe\",\n        strokeDasharray: \"1 1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(XAxis, {\n        dataKey: \"dates\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Legend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"new_daily_cases\",\n        stroke: \"#8884d8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"new_daily_deaths\",\n        stroke: \"#82ca9d\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 23\n        }\n      }))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, \"Loading graph...\");\n  }\n\n}\n\nexport default Company;","map":{"version":3,"sources":["/Users/vimanyuawal/my-app/src/Charts/IndiaCases.js"],"names":["React","Component","LineChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Line","ComposedChart","Area","Bar","Company","constructor","props","state","error","isLoaded","items","getIndiaData","fetch","then","res","json","result","setState","console","log","componentDidMount","getUS_Timeline","render","data","arrangeForGraph"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Line,\n  ComposedChart,\n  Area,\n  Bar\n} from \"recharts\";\n\n\n\n\nclass Company extends Component {\n\n    constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  getIndiaData() {\n    fetch('https://api.covid19india.org/data.json')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          // console.log(result);\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log('Could not access data');\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  componentDidMount() {\n    this.getUS_Timeline();\n  }\n\n//   arrangeForGraph() {\n//     var data = this.state.items;\n//     var objectArray = [];\n//     var day = 1;\n    \n//     for(var key in data['timelineitems'][0]) {\n//       var date = new Date(key);\n\n//       var obj = {\n//               new_daily_deaths:data['timelineitems'][0][key]['new_daily_deaths'],\n//               new_daily_cases:data['timelineitems'][0][key]['new_daily_cases'],\n//               dates:key,\n//               day: day\n//             }\n//       objectArray.push(obj);\n//       day += 1;\n//     } \n\n//     objectArray.pop();\n    \n//     return objectArray;\n\n//   }\n\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if(isLoaded) {\n      var data = this.arrangeForGraph(items);\n      console.log(data);   \n\n\n      return (\n              <div>\n                <h4>United States Cases</h4>\n                <div className = \"chart\">\n                    <LineChart width={1000} height={300} data={data}>\n                    <CartesianGrid stroke=\"#efe\" strokeDasharray=\"1 1\"/>\n                      <XAxis dataKey=\"dates\"/>\n                      <YAxis/>\n                      <Tooltip />\n                      <Legend />\n                      <Line type=\"monotone\" dataKey=\"new_daily_cases\" stroke=\"#8884d8\" />\n                      <Line type=\"monotone\" dataKey=\"new_daily_deaths\" stroke=\"#82ca9d\" />\n                    </LineChart>\n                  </div>\n              </div>\n\n          );\n    }\n\n    return (\n        <p>Loading graph...</p>\n      )\n  }\n\n}\n\nexport default Company;"]},"metadata":{},"sourceType":"module"}