{"ast":null,"code":"var _jsxFileName = \"/Users/vimanyuawal/my-app/src/Company/Company.js\";\nimport React from 'react';\nimport { wait } from '@testing-library/react';\nimport Plot from 'react-plotly.js';\nimport { LineChart, Line } from 'recharts';\n\nclass Company extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValues: [],\n      ticker: 'AMZN'\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStock();\n  }\n\n  fetchStock() {\n    const pointerToThis = this;\n    const API_KEY = '43MM0QNXY3LH3ING';\n    let ticker = 'AMZN';\n    let API_Call = `https://datafied.api.edgar-online.com/v2/corefinancials/ann.json?primarysymbols=MSFT&numperiods=3&debug=true&appkey=3f8bb6ad0c2a0f2b0fac573f04090179`;\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n    fetch(API_Call).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      for (var key in data['Time Series (Daily)']) {\n        stockChartXValuesFunction.push(key);\n        stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n      }\n\n      pointerToThis.setState({\n        stockChartXValues: stockChartXValuesFunction,\n        stockChartYValues: stockChartYValuesFunction\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Plot, {\n      data: [{\n        x: this.state.stockChartXValues,\n        y: this.state.stockChartYValues,\n        type: 'scatter',\n        mode: 'lines+markers',\n        marker: {\n          color: 'black'\n        }\n      }],\n      layout: {\n        width: 700,\n        height: 500,\n        title: this.state.ticker\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Company;","map":{"version":3,"sources":["/Users/vimanyuawal/my-app/src/Company/Company.js"],"names":["React","wait","Plot","LineChart","Line","Company","Component","constructor","props","state","stockChartXValues","stockChartYValues","ticker","componentDidMount","fetchStock","pointerToThis","API_KEY","API_Call","stockChartXValuesFunction","stockChartYValuesFunction","fetch","then","response","json","data","key","push","setState","render","x","y","type","mode","marker","color","width","height","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,UAAhC;;AAIA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,iBAAiB,EAAE,EADV;AAETC,MAAAA,iBAAiB,EAAE,EAFV;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL;AACH;;AAEDA,EAAAA,UAAU,GAAG;AACT,UAAMC,aAAa,GAAG,IAAtB;AACA,UAAMC,OAAO,GAAG,kBAAhB;AACA,QAAIJ,MAAM,GAAG,MAAb;AACA,QAAIK,QAAQ,GAAI,sJAAhB;AACA,QAAIC,yBAAyB,GAAG,EAAhC;AACA,QAAIC,yBAAyB,GAAG,EAAhC;AACAC,IAAAA,KAAK,CAACH,QAAD,CAAL,CACKI,IADL,CAEQ,UAASC,QAAT,EAAmB;AACf,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAJT,EAMKF,IANL,CAQQ,UAASG,IAAT,EAAe;AACX,WAAI,IAAIC,GAAR,IAAeD,IAAI,CAAC,qBAAD,CAAnB,EAA4C;AACxCN,QAAAA,yBAAyB,CAACQ,IAA1B,CAA+BD,GAA/B;AACAN,QAAAA,yBAAyB,CAACO,IAA1B,CACIF,IAAI,CAAC,qBAAD,CAAJ,CAA4BC,GAA5B,EAAiC,SAAjC,CADJ;AAGH;;AAEDV,MAAAA,aAAa,CAACY,QAAd,CAAwB;AACpBjB,QAAAA,iBAAiB,EAAEQ,yBADC;AAEpBP,QAAAA,iBAAiB,EAAEQ;AAFC,OAAxB;AAIH,KApBT;AAsBH;;AAEDS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAE,CACN;AACIC,QAAAA,CAAC,EAAE,KAAKpB,KAAL,CAAWC,iBADlB;AAEIoB,QAAAA,CAAC,EAAE,KAAKrB,KAAL,CAAWE,iBAFlB;AAGIoB,QAAAA,IAAI,EAAE,SAHV;AAIIC,QAAAA,IAAI,EAAE,eAJV;AAKIC,QAAAA,MAAM,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR;AALZ,OADM,CADV;AAWI,MAAA,MAAM,EAAG;AAACC,QAAAA,KAAK,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE,GAArB;AAA0BC,QAAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWG;AAA5C,OAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAkBH;;AAjEiC;;AAqEtC,eAAeP,OAAf","sourcesContent":["import React from 'react';\nimport { wait } from '@testing-library/react';\nimport Plot from 'react-plotly.js';\nimport { LineChart, Line } from 'recharts';\n\n\n\nclass Company extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            stockChartXValues: [],\n            stockChartYValues: [],\n            ticker: 'AMZN'\n        }\n    }\n\n    componentDidMount() {\n        this.fetchStock();\n    }\n\n    fetchStock() {\n        const pointerToThis = this;\n        const API_KEY = '43MM0QNXY3LH3ING';\n        let ticker = 'AMZN';\n        let API_Call = `https://datafied.api.edgar-online.com/v2/corefinancials/ann.json?primarysymbols=MSFT&numperiods=3&debug=true&appkey=3f8bb6ad0c2a0f2b0fac573f04090179`;\n        let stockChartXValuesFunction = [];\n        let stockChartYValuesFunction = [];\n        fetch(API_Call)\n            .then(\n                function(response) {\n                    return response.json();\n                }\n            )\n            .then(\n                \n                function(data) {\n                    for(var key in data['Time Series (Daily)']) {\n                        stockChartXValuesFunction.push(key);\n                        stockChartYValuesFunction.push(\n                            data['Time Series (Daily)'][key]['1. open']\n                        );\n                    }\n\n                    pointerToThis.setState( {\n                        stockChartXValues: stockChartXValuesFunction,\n                        stockChartYValues: stockChartYValuesFunction\n                    });\n                }\n            )\n    }\n\n    render() {\n        return (\n            <div>\n                {/* <h1>{this.state.ticker}</h1> */}\n                <Plot\n                    data={[\n                    {\n                        x: this.state.stockChartXValues,\n                        y: this.state.stockChartYValues,\n                        type: 'scatter',\n                        mode: 'lines+markers',\n                        marker: {color: 'black'},\n                    },\n                    \n                    ]}\n                    layout={ {width: 700, height: 500, title: this.state.ticker} }\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default Company;"]},"metadata":{},"sourceType":"module"}