{"ast":null,"code":"var _jsxFileName = \"/Users/vimanyuawal/my-app/src/Company/Company.js\";\nimport React, { Component } from 'react';\nimport { wait } from '@testing-library/react';\nimport Plot from 'react-plotly.js';\nimport { LineChart, Line } from 'recharts';\n\nclass Company extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  getUS_Timeline() {\n    fetch('https://cors-anywhere.herokuapp.com/https://thevirustracker.com/free-api?countryTimeline=US').then(res => res.json()).then(result => {\n      // console.log(result);\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      console.log('Could not access data');\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getUS_Timeline();\n  }\n\n  arrangeForGraph() {\n    var data = this.state.items;\n    var objectArray = [];\n    var day = 1;\n\n    for (var key in data['timelineitems'][0]) {\n      var date = new Date(key);\n      var obj = {\n        new_daily_deaths: data['timelineitems'][0][key]['new_daily_deaths'],\n        new_daily_cases: data['timelineitems'][0][key]['new_daily_cases'],\n        dates: date,\n        day: day\n      };\n      objectArray.push(obj);\n      day += 1;\n    }\n\n    objectArray.pop();\n    return objectArray;\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (isLoaded) {\n      var data = this.arrangeForGraph(items);\n      console.log(data);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LineChart, {\n        width: 400,\n        height: 400,\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"dates\",\n        stroke: \"#8884d8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }\n      })), \");\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Loading graph...\");\n  }\n\n}\n\nexport default Company;","map":{"version":3,"sources":["/Users/vimanyuawal/my-app/src/Company/Company.js"],"names":["React","Component","wait","Plot","LineChart","Line","Company","constructor","props","state","error","isLoaded","items","getUS_Timeline","fetch","then","res","json","result","setState","console","log","componentDidMount","arrangeForGraph","data","objectArray","day","key","date","Date","obj","new_daily_deaths","new_daily_cases","dates","push","pop","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { wait } from '@testing-library/react';\nimport Plot from 'react-plotly.js';\nimport { LineChart, Line } from 'recharts';\n\n\nclass Company extends Component {\n\n    constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  getUS_Timeline() {\n    fetch('https://cors-anywhere.herokuapp.com/https://thevirustracker.com/free-api?countryTimeline=US')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          // console.log(result);\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log('Could not access data');\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  componentDidMount() {\n    this.getUS_Timeline();\n  }\n\n  arrangeForGraph() {\n    var data = this.state.items;\n    var objectArray = [];\n    var day = 1;\n    \n    for(var key in data['timelineitems'][0]) {\n      var date = new Date(key);\n\n      var obj = {\n              new_daily_deaths:data['timelineitems'][0][key]['new_daily_deaths'],\n              new_daily_cases:data['timelineitems'][0][key]['new_daily_cases'],\n              dates:date,\n              day: day\n            }\n      objectArray.push(obj);\n      day += 1;\n    } \n\n    objectArray.pop();\n    \n    return objectArray;\n\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if(isLoaded) {\n      var data = this.arrangeForGraph(items);\n      console.log(data);\n\n      return (\n                <div>\n                    <LineChart width={400} height={400} data={data}>\n                      <Line type=\"monotone\" dataKey=\"dates\" stroke=\"#8884d8\" />\n                    </LineChart>\n                  );\n                  </div>\n\n          )\n    }\n\n    return (\n        <p>Loading graph...</p>\n      )\n  }\n\n}\n\nexport default Company;"]},"metadata":{},"sourceType":"module"}